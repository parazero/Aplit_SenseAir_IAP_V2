ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB124:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** #include "includes.h"
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** extern uint32_t msTicks;
  42:Src/stm32f4xx_it.c **** extern uint32_t Counter1Sec;
  43:Src/stm32f4xx_it.c **** extern uint32_t Counter1Min;
  44:Src/stm32f4xx_it.c **** extern uint32_t CounterNoGPS;
  45:Src/stm32f4xx_it.c **** void InsertCharToString_UART2(char InChar); // catch string at UART2
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** extern bool Catched_String_UART2;
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** //input buffer & pointers UART1 & UART5
  50:Src/stm32f4xx_it.c **** char aRxBufferCh5='F';
  51:Src/stm32f4xx_it.c **** #define InBuf5SizeDef 2000
  52:Src/stm32f4xx_it.c **** char InBuf5[InBuf5SizeDef];
  53:Src/stm32f4xx_it.c **** uint16_t InBuf5InPtr=0;
  54:Src/stm32f4xx_it.c **** uint16_t InBuf5Size = InBuf5SizeDef;
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** char aRxBufferCh1='F';
  57:Src/stm32f4xx_it.c **** #define InBuf1SizeDef 2000
  58:Src/stm32f4xx_it.c **** char InBuf1[InBuf1SizeDef];
  59:Src/stm32f4xx_it.c **** uint16_t InBuf1InPtr=0;
  60:Src/stm32f4xx_it.c **** uint16_t InBuf1Size = InBuf1SizeDef;
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** char aRxBufferCh2='2';
  63:Src/stm32f4xx_it.c **** #define InBuf2SizeDef 50
  64:Src/stm32f4xx_it.c **** char InBuf2[InBuf2SizeDef];
  65:Src/stm32f4xx_it.c **** uint16_t InBuf2InPtr=0;
  66:Src/stm32f4xx_it.c **** uint16_t InBuf2Size = InBuf2SizeDef;
  67:Src/stm32f4xx_it.c **** 
  68:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  69:Src/stm32f4xx_it.c **** 
  70:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  71:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart5;
  72:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  73:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c **** /******************************************************************************/
  76:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  77:Src/stm32f4xx_it.c **** /******************************************************************************/
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c **** /**
  80:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  81:Src/stm32f4xx_it.c **** */
  82:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  83:Src/stm32f4xx_it.c **** {
  28              		.loc 1 83 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 3


  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE124:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB125:
  84:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  87:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  88:Src/stm32f4xx_it.c **** 
  89:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  90:Src/stm32f4xx_it.c **** }
  91:Src/stm32f4xx_it.c **** 
  92:Src/stm32f4xx_it.c **** /**
  93:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  94:Src/stm32f4xx_it.c **** */
  95:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  96:Src/stm32f4xx_it.c **** {
  47              		.loc 1 96 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE125:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB126:
  97:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  98:Src/stm32f4xx_it.c **** 
  99:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 100:Src/stm32f4xx_it.c ****   while (1)
 101:Src/stm32f4xx_it.c ****   {
 102:Src/stm32f4xx_it.c ****   }
 103:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
 104:Src/stm32f4xx_it.c **** 
 105:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
 106:Src/stm32f4xx_it.c **** }
 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c **** /**
 109:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 4


 110:Src/stm32f4xx_it.c **** */
 111:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 112:Src/stm32f4xx_it.c **** {
  68              		.loc 1 112 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE126:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB127:
 113:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 114:Src/stm32f4xx_it.c **** 
 115:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 116:Src/stm32f4xx_it.c ****   while (1)
 117:Src/stm32f4xx_it.c ****   {
 118:Src/stm32f4xx_it.c ****   }
 119:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 120:Src/stm32f4xx_it.c **** 
 121:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 122:Src/stm32f4xx_it.c **** }
 123:Src/stm32f4xx_it.c **** 
 124:Src/stm32f4xx_it.c **** /**
 125:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 126:Src/stm32f4xx_it.c **** */
 127:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 128:Src/stm32f4xx_it.c **** {
  89              		.loc 1 128 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE127:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB128:
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 5


 129:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 130:Src/stm32f4xx_it.c **** 
 131:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 132:Src/stm32f4xx_it.c ****   while (1)
 133:Src/stm32f4xx_it.c ****   {
 134:Src/stm32f4xx_it.c ****   }
 135:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 136:Src/stm32f4xx_it.c **** 
 137:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 138:Src/stm32f4xx_it.c **** }
 139:Src/stm32f4xx_it.c **** 
 140:Src/stm32f4xx_it.c **** /**
 141:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 142:Src/stm32f4xx_it.c **** */
 143:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 144:Src/stm32f4xx_it.c **** {
 110              		.loc 1 144 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE128:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB129:
 145:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 146:Src/stm32f4xx_it.c **** 
 147:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 148:Src/stm32f4xx_it.c ****   while (1)
 149:Src/stm32f4xx_it.c ****   {
 150:Src/stm32f4xx_it.c ****   }
 151:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 154:Src/stm32f4xx_it.c **** }
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c **** /**
 157:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 158:Src/stm32f4xx_it.c **** */
 159:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 160:Src/stm32f4xx_it.c **** {
 131              		.loc 1 160 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 6


 137              		.cfi_endproc
 138              	.LFE129:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB130:
 161:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 164:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 167:Src/stm32f4xx_it.c **** }
 168:Src/stm32f4xx_it.c **** 
 169:Src/stm32f4xx_it.c **** /**
 170:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 171:Src/stm32f4xx_it.c **** */
 172:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 173:Src/stm32f4xx_it.c **** {
 150              		.loc 1 173 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE130:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB131:
 174:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 177:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 180:Src/stm32f4xx_it.c **** }
 181:Src/stm32f4xx_it.c **** 
 182:Src/stm32f4xx_it.c **** /**
 183:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 184:Src/stm32f4xx_it.c **** */
 185:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 186:Src/stm32f4xx_it.c **** {
 169              		.loc 1 186 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 7


 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE131:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB132:
 187:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 188:Src/stm32f4xx_it.c **** 
 189:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 190:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 191:Src/stm32f4xx_it.c **** 
 192:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 193:Src/stm32f4xx_it.c **** }
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c **** /**
 196:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 197:Src/stm32f4xx_it.c **** */
 198:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 199:Src/stm32f4xx_it.c **** {
 188              		.loc 1 199 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 199 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 200:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 201:Src/stm32f4xx_it.c ****   msTicks++;
 198              		.loc 1 201 0
 199 0002 064A     		ldr	r2, .L15
 200 0004 1368     		ldr	r3, [r2]
 201 0006 0133     		adds	r3, r3, #1
 202 0008 1360     		str	r3, [r2]
 202:Src/stm32f4xx_it.c **** //  Counter1Sec++;
 203:Src/stm32f4xx_it.c **** //  Counter1Min++;
 204:Src/stm32f4xx_it.c ****   CounterNoGPS++;
 203              		.loc 1 204 0
 204 000a 054A     		ldr	r2, .L15+4
 205 000c 1368     		ldr	r3, [r2]
 206 000e 0133     		adds	r3, r3, #1
 207 0010 1360     		str	r3, [r2]
 205:Src/stm32f4xx_it.c **** 
 206:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 207:Src/stm32f4xx_it.c ****   HAL_IncTick();
 208              		.loc 1 207 0
 209 0012 FFF7FEFF 		bl	HAL_IncTick
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 8


 210              	.LVL0:
 208:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 211              		.loc 1 208 0
 212 0016 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 213              	.LVL1:
 214 001a 08BD     		pop	{r3, pc}
 215              	.L16:
 216              		.align	2
 217              	.L15:
 218 001c 00000000 		.word	msTicks
 219 0020 00000000 		.word	CounterNoGPS
 220              		.cfi_endproc
 221              	.LFE132:
 223              		.section	.text.USART1_IRQHandler,"ax",%progbits
 224              		.align	1
 225              		.global	USART1_IRQHandler
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	USART1_IRQHandler:
 232              	.LFB133:
 209:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 210:Src/stm32f4xx_it.c **** 
 211:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 212:Src/stm32f4xx_it.c **** }
 213:Src/stm32f4xx_it.c **** 
 214:Src/stm32f4xx_it.c **** /******************************************************************************/
 215:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 216:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 217:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 218:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 219:Src/stm32f4xx_it.c **** /******************************************************************************/
 220:Src/stm32f4xx_it.c **** 
 221:Src/stm32f4xx_it.c **** /**
 222:Src/stm32f4xx_it.c **** * @brief This function handles USART1 global interrupt.
 223:Src/stm32f4xx_it.c **** */
 224:Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 225:Src/stm32f4xx_it.c **** {
 233              		.loc 1 225 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI1:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 226:Src/stm32f4xx_it.c ****   static bool RcvFlag=false;  
 227:Src/stm32f4xx_it.c ****    uint32_t isrflags   = READ_REG(huart1.Instance->SR);
 242              		.loc 1 227 0
 243 0002 154B     		ldr	r3, .L22
 244 0004 1B68     		ldr	r3, [r3]
 245 0006 1A68     		ldr	r2, [r3]
 246              	.LVL2:
 228:Src/stm32f4xx_it.c ****    uint32_t cr1its     = READ_REG(huart1.Instance->CR1);
 247              		.loc 1 228 0
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 9


 248 0008 DB68     		ldr	r3, [r3, #12]
 249              	.LVL3:
 229:Src/stm32f4xx_it.c ****   
 230:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 231:Src/stm32f4xx_it.c ****    if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 250              		.loc 1 231 0
 251 000a 12F0200F 		tst	r2, #32
 252 000e 15D0     		beq	.L18
 253              		.loc 1 231 0 is_stmt 0 discriminator 1
 254 0010 13F0200F 		tst	r3, #32
 255 0014 12D0     		beq	.L18
 232:Src/stm32f4xx_it.c ****     {
 233:Src/stm32f4xx_it.c ****     RcvFlag=true;
 256              		.loc 1 233 0 is_stmt 1
 257 0016 0122     		movs	r2, #1
 258              	.LVL4:
 259 0018 104B     		ldr	r3, .L22+4
 260              	.LVL5:
 261 001a 1A70     		strb	r2, [r3]
 234:Src/stm32f4xx_it.c ****     InBuf1[InBuf1InPtr++] = aRxBufferCh1;	if (InBuf1InPtr>InBuf1Size) InBuf1InPtr=0;
 262              		.loc 1 234 0
 263 001c 1049     		ldr	r1, .L22+8
 264 001e 0A88     		ldrh	r2, [r1]
 265 0020 531C     		adds	r3, r2, #1
 266 0022 9BB2     		uxth	r3, r3
 267 0024 0B80     		strh	r3, [r1]	@ movhi
 268 0026 0F49     		ldr	r1, .L22+12
 269 0028 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 270 002a 0F49     		ldr	r1, .L22+16
 271 002c 8854     		strb	r0, [r1, r2]
 272 002e 0F4A     		ldr	r2, .L22+20
 273 0030 1288     		ldrh	r2, [r2]
 274 0032 9342     		cmp	r3, r2
 275 0034 02D9     		bls	.L18
 276              		.loc 1 234 0 is_stmt 0 discriminator 1
 277 0036 0022     		movs	r2, #0
 278 0038 094B     		ldr	r3, .L22+8
 279 003a 1A80     		strh	r2, [r3]	@ movhi
 280              	.L18:
 235:Src/stm32f4xx_it.c ****     }
 236:Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 237:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 281              		.loc 1 237 0 is_stmt 1
 282 003c 0648     		ldr	r0, .L22
 283 003e FFF7FEFF 		bl	HAL_UART_IRQHandler
 284              	.LVL6:
 238:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 239:Src/stm32f4xx_it.c ****   if (RcvFlag==true)
 285              		.loc 1 239 0
 286 0042 064B     		ldr	r3, .L22+4
 287 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 288 0046 03B9     		cbnz	r3, .L21
 289              	.L17:
 290 0048 08BD     		pop	{r3, pc}
 291              	.L21:
 240:Src/stm32f4xx_it.c ****     {
 241:Src/stm32f4xx_it.c ****     if(HAL_UART_Receive_IT(&huart1, (char *)&aRxBufferCh1, 1 ) != HAL_OK)   {  } //  Error_Handler(
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 10


 292              		.loc 1 241 0
 293 004a 0122     		movs	r2, #1
 294 004c 0549     		ldr	r1, .L22+12
 295 004e 0248     		ldr	r0, .L22
 296 0050 FFF7FEFF 		bl	HAL_UART_Receive_IT
 297              	.LVL7:
 242:Src/stm32f4xx_it.c ****     }
 243:Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 244:Src/stm32f4xx_it.c **** }
 298              		.loc 1 244 0
 299 0054 F8E7     		b	.L17
 300              	.L23:
 301 0056 00BF     		.align	2
 302              	.L22:
 303 0058 00000000 		.word	huart1
 304 005c 00000000 		.word	.LANCHOR0
 305 0060 00000000 		.word	.LANCHOR1
 306 0064 00000000 		.word	.LANCHOR2
 307 0068 00000000 		.word	InBuf1
 308 006c 00000000 		.word	.LANCHOR3
 309              		.cfi_endproc
 310              	.LFE133:
 312              		.section	.text.USART2_IRQHandler,"ax",%progbits
 313              		.align	1
 314              		.global	USART2_IRQHandler
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	USART2_IRQHandler:
 321              	.LFB134:
 245:Src/stm32f4xx_it.c **** 
 246:Src/stm32f4xx_it.c **** /**
 247:Src/stm32f4xx_it.c **** * @brief This function handles USART2 global interrupt.
 248:Src/stm32f4xx_it.c **** */
 249:Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 250:Src/stm32f4xx_it.c **** {  static bool RcvFlag=false;
 322              		.loc 1 250 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI2:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 251:Src/stm32f4xx_it.c **** 
 252:Src/stm32f4xx_it.c ****    uint32_t isrflags   = READ_REG(huart2.Instance->SR);
 331              		.loc 1 252 0
 332 0002 154B     		ldr	r3, .L29
 333 0004 1B68     		ldr	r3, [r3]
 334 0006 1A68     		ldr	r2, [r3]
 335              	.LVL8:
 253:Src/stm32f4xx_it.c ****    uint32_t cr1its     = READ_REG(huart2.Instance->CR1);
 336              		.loc 1 253 0
 337 0008 D968     		ldr	r1, [r3, #12]
 338              	.LVL9:
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 11


 254:Src/stm32f4xx_it.c ****    uint32_t cr3its     = READ_REG(huart2.Instance->CR3);
 339              		.loc 1 254 0
 340 000a 5B69     		ldr	r3, [r3, #20]
 341              	.LVL10:
 255:Src/stm32f4xx_it.c ****    uint32_t errorflags = 0x00U;
 256:Src/stm32f4xx_it.c **** 
 257:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 258:Src/stm32f4xx_it.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 259:Src/stm32f4xx_it.c ****  // if(errorflags == RESET)
 260:Src/stm32f4xx_it.c ****   {
 261:Src/stm32f4xx_it.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 342              		.loc 1 261 0
 343 000c 12F0200F 		tst	r2, #32
 344 0010 15D0     		beq	.L25
 345              		.loc 1 261 0 is_stmt 0 discriminator 1
 346 0012 11F0200F 		tst	r1, #32
 347 0016 12D0     		beq	.L25
 262:Src/stm32f4xx_it.c ****     {
 263:Src/stm32f4xx_it.c ****     RcvFlag=true;
 348              		.loc 1 263 0 is_stmt 1
 349 0018 0122     		movs	r2, #1
 350              	.LVL11:
 351 001a 104B     		ldr	r3, .L29+4
 352 001c 1A70     		strb	r2, [r3]
 264:Src/stm32f4xx_it.c ****     InBuf2[InBuf2InPtr++] = aRxBufferCh2; if (InBuf2InPtr>InBuf2Size) InBuf2InPtr=0;
 353              		.loc 1 264 0
 354 001e 1049     		ldr	r1, .L29+8
 355              	.LVL12:
 356 0020 0A88     		ldrh	r2, [r1]
 357 0022 531C     		adds	r3, r2, #1
 358 0024 9BB2     		uxth	r3, r3
 359 0026 0B80     		strh	r3, [r1]	@ movhi
 360 0028 0E49     		ldr	r1, .L29+12
 361 002a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 362 002c 0E49     		ldr	r1, .L29+16
 363 002e 8854     		strb	r0, [r1, r2]
 364 0030 0E4A     		ldr	r2, .L29+20
 365 0032 1288     		ldrh	r2, [r2]
 366 0034 9342     		cmp	r3, r2
 367 0036 02D9     		bls	.L25
 368              		.loc 1 264 0 is_stmt 0 discriminator 1
 369 0038 0022     		movs	r2, #0
 370 003a 094B     		ldr	r3, .L29+8
 371 003c 1A80     		strh	r2, [r3]	@ movhi
 372              	.L25:
 265:Src/stm32f4xx_it.c ****     }
 266:Src/stm32f4xx_it.c ****   }
 267:Src/stm32f4xx_it.c **** //   if (!Catched_String_UART2)     
 268:Src/stm32f4xx_it.c **** //    InsertCharToString_UART2(aRxBufferCh2); // catch string at UART2
 269:Src/stm32f4xx_it.c **** 
 270:Src/stm32f4xx_it.c ****    /* USER CODE END USART2_IRQn 0 */
 271:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 373              		.loc 1 271 0 is_stmt 1
 374 003e 0648     		ldr	r0, .L29
 375 0040 FFF7FEFF 		bl	HAL_UART_IRQHandler
 376              	.LVL13:
 272:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 12


 273:Src/stm32f4xx_it.c ****   if (RcvFlag==true)
 377              		.loc 1 273 0
 378 0044 054B     		ldr	r3, .L29+4
 379 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 380 0048 03B9     		cbnz	r3, .L28
 381              	.L24:
 382 004a 08BD     		pop	{r3, pc}
 383              	.L28:
 274:Src/stm32f4xx_it.c ****     {
 275:Src/stm32f4xx_it.c ****       if(HAL_UART_Receive_IT(&huart2, (char *)&aRxBufferCh2, 1 ) != HAL_OK)   {  } //  Error_Handle
 384              		.loc 1 275 0
 385 004c 0122     		movs	r2, #1
 386 004e 0549     		ldr	r1, .L29+12
 387 0050 0148     		ldr	r0, .L29
 388 0052 FFF7FEFF 		bl	HAL_UART_Receive_IT
 389              	.LVL14:
 276:Src/stm32f4xx_it.c ****     }
 277:Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 278:Src/stm32f4xx_it.c **** }
 390              		.loc 1 278 0
 391 0056 F8E7     		b	.L24
 392              	.L30:
 393              		.align	2
 394              	.L29:
 395 0058 00000000 		.word	huart2
 396 005c 00000000 		.word	.LANCHOR4
 397 0060 00000000 		.word	.LANCHOR5
 398 0064 00000000 		.word	.LANCHOR6
 399 0068 00000000 		.word	InBuf2
 400 006c 00000000 		.word	.LANCHOR7
 401              		.cfi_endproc
 402              	.LFE134:
 404              		.section	.text.UART5_IRQHandler,"ax",%progbits
 405              		.align	1
 406              		.global	UART5_IRQHandler
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	UART5_IRQHandler:
 413              	.LFB135:
 279:Src/stm32f4xx_it.c **** 
 280:Src/stm32f4xx_it.c **** /**
 281:Src/stm32f4xx_it.c **** * @brief This function handles UART5 global interrupt.
 282:Src/stm32f4xx_it.c **** */
 283:Src/stm32f4xx_it.c **** void UART5_IRQHandler(void)
 284:Src/stm32f4xx_it.c **** {
 414              		.loc 1 284 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI3:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
 285:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 0 */
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 13


 286:Src/stm32f4xx_it.c ****     InBuf5[InBuf5InPtr++] = aRxBufferCh5; if (InBuf5InPtr>InBuf5Size) InBuf5InPtr=0;
 423              		.loc 1 286 0
 424 0002 0D49     		ldr	r1, .L34
 425 0004 0A88     		ldrh	r2, [r1]
 426 0006 531C     		adds	r3, r2, #1
 427 0008 9BB2     		uxth	r3, r3
 428 000a 0B80     		strh	r3, [r1]	@ movhi
 429 000c 0B49     		ldr	r1, .L34+4
 430 000e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 431 0010 0B49     		ldr	r1, .L34+8
 432 0012 8854     		strb	r0, [r1, r2]
 433 0014 0B4A     		ldr	r2, .L34+12
 434 0016 1288     		ldrh	r2, [r2]
 435 0018 9342     		cmp	r3, r2
 436 001a 02D9     		bls	.L32
 437              		.loc 1 286 0 is_stmt 0 discriminator 1
 438 001c 0022     		movs	r2, #0
 439 001e 064B     		ldr	r3, .L34
 440 0020 1A80     		strh	r2, [r3]	@ movhi
 441              	.L32:
 287:Src/stm32f4xx_it.c ****   /* USER CODE END UART5_IRQn 0 */
 288:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart5);
 442              		.loc 1 288 0 is_stmt 1
 443 0022 094C     		ldr	r4, .L34+16
 444 0024 2046     		mov	r0, r4
 445 0026 FFF7FEFF 		bl	HAL_UART_IRQHandler
 446              	.LVL15:
 289:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 1 */
 290:Src/stm32f4xx_it.c ****     if(HAL_UART_Receive_IT(&huart5, (char *)&aRxBufferCh5, 1 ) != HAL_OK)   {  } //  Error_Handler(
 447              		.loc 1 290 0
 448 002a 0122     		movs	r2, #1
 449 002c 0349     		ldr	r1, .L34+4
 450 002e 2046     		mov	r0, r4
 451 0030 FFF7FEFF 		bl	HAL_UART_Receive_IT
 452              	.LVL16:
 453 0034 10BD     		pop	{r4, pc}
 454              	.L35:
 455 0036 00BF     		.align	2
 456              	.L34:
 457 0038 00000000 		.word	.LANCHOR8
 458 003c 00000000 		.word	.LANCHOR9
 459 0040 00000000 		.word	InBuf5
 460 0044 00000000 		.word	.LANCHOR10
 461 0048 00000000 		.word	huart5
 462              		.cfi_endproc
 463              	.LFE135:
 465              		.global	InBuf2Size
 466              		.global	InBuf2InPtr
 467              		.comm	InBuf2,50,4
 468              		.global	aRxBufferCh2
 469              		.global	InBuf1Size
 470              		.global	InBuf1InPtr
 471              		.comm	InBuf1,2000,4
 472              		.global	aRxBufferCh1
 473              		.global	InBuf5Size
 474              		.global	InBuf5InPtr
 475              		.comm	InBuf5,2000,4
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 14


 476              		.global	aRxBufferCh5
 477              		.section	.bss.InBuf1InPtr,"aw",%nobits
 478              		.align	1
 479              		.set	.LANCHOR1,. + 0
 482              	InBuf1InPtr:
 483 0000 0000     		.space	2
 484              		.section	.bss.InBuf2InPtr,"aw",%nobits
 485              		.align	1
 486              		.set	.LANCHOR5,. + 0
 489              	InBuf2InPtr:
 490 0000 0000     		.space	2
 491              		.section	.bss.InBuf5InPtr,"aw",%nobits
 492              		.align	1
 493              		.set	.LANCHOR8,. + 0
 496              	InBuf5InPtr:
 497 0000 0000     		.space	2
 498              		.section	.bss.RcvFlag.10129,"aw",%nobits
 499              		.set	.LANCHOR0,. + 0
 502              	RcvFlag.10129:
 503 0000 00       		.space	1
 504              		.section	.bss.RcvFlag.10135,"aw",%nobits
 505              		.set	.LANCHOR4,. + 0
 508              	RcvFlag.10135:
 509 0000 00       		.space	1
 510              		.section	.data.InBuf1Size,"aw",%progbits
 511              		.align	1
 512              		.set	.LANCHOR3,. + 0
 515              	InBuf1Size:
 516 0000 D007     		.short	2000
 517              		.section	.data.InBuf2Size,"aw",%progbits
 518              		.align	1
 519              		.set	.LANCHOR7,. + 0
 522              	InBuf2Size:
 523 0000 3200     		.short	50
 524              		.section	.data.InBuf5Size,"aw",%progbits
 525              		.align	1
 526              		.set	.LANCHOR10,. + 0
 529              	InBuf5Size:
 530 0000 D007     		.short	2000
 531              		.section	.data.aRxBufferCh1,"aw",%progbits
 532              		.set	.LANCHOR2,. + 0
 535              	aRxBufferCh1:
 536 0000 46       		.byte	70
 537              		.section	.data.aRxBufferCh2,"aw",%progbits
 538              		.set	.LANCHOR6,. + 0
 541              	aRxBufferCh2:
 542 0000 32       		.byte	50
 543              		.section	.data.aRxBufferCh5,"aw",%progbits
 544              		.set	.LANCHOR9,. + 0
 547              	aRxBufferCh5:
 548 0000 46       		.byte	70
 549              		.text
 550              	.Letext0:
 551              		.file 2 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\arm-none-eabi\\include\\mach
 552              		.file 3 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\arm-none-eabi\\include\\sys\
 553              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 554              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 15


 555              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 556              		.file 7 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\arm-none-eabi\\include\\sys\
 557              		.file 8 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\arm-none-eabi\\include\\sys\
 558              		.file 9 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\lib\\gcc\\arm-none-eabi\\6.3
 559              		.file 10 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\arm-none-eabi\\include\\sys
 560              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 561              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 562              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 563              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 564              		.file 15 "Inc/types.h"
 565              		.file 16 "Inc/../Drivers/Perepheral_drivers/Inc/baro_ms5611.h"
 566              		.file 17 "Inc/../Drivers/Perepheral_drivers/Inc/bma2x2.h"
 567              		.file 18 "Inc/../Drivers/Perepheral_drivers/Inc/bme280.h"
 568              		.file 19 "Inc/../Drivers/Perepheral_drivers/Inc/bmg160.h"
 569              		.file 20 "Inc/../Drivers/Perepheral_drivers/Inc/bmm050.h"
 570              		.file 21 "c:\\program files\\gcc-arm-none-eabi-6-2017-q2-update-win32\\arm-none-eabi\\include\\mat
 571              		.file 22 "Inc/../Drivers/Perepheral_drivers/Inc/ms5611.h"
 572              		.file 23 "Inc/includes.h"
 573              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 574              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:18     .text.NMI_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:59     .text.MemManage_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:66     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:80     .text.BusFault_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:87     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:101    .text.UsageFault_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:108    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:122    .text.SVC_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:129    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:141    .text.DebugMon_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:148    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:160    .text.PendSV_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:167    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:179    .text.SysTick_Handler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:186    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:218    .text.SysTick_Handler:0000001c $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:224    .text.USART1_IRQHandler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:231    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:303    .text.USART1_IRQHandler:00000058 $d
                            *COM*:000007d0 InBuf1
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:313    .text.USART2_IRQHandler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:320    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:395    .text.USART2_IRQHandler:00000058 $d
                            *COM*:00000032 InBuf2
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:405    .text.UART5_IRQHandler:00000000 $t
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:412    .text.UART5_IRQHandler:00000000 UART5_IRQHandler
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:457    .text.UART5_IRQHandler:00000038 $d
                            *COM*:000007d0 InBuf5
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:522    .data.InBuf2Size:00000000 InBuf2Size
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:489    .bss.InBuf2InPtr:00000000 InBuf2InPtr
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:541    .data.aRxBufferCh2:00000000 aRxBufferCh2
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:515    .data.InBuf1Size:00000000 InBuf1Size
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:482    .bss.InBuf1InPtr:00000000 InBuf1InPtr
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:535    .data.aRxBufferCh1:00000000 aRxBufferCh1
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:529    .data.InBuf5Size:00000000 InBuf5Size
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:496    .bss.InBuf5InPtr:00000000 InBuf5InPtr
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:547    .data.aRxBufferCh5:00000000 aRxBufferCh5
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:478    .bss.InBuf1InPtr:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:485    .bss.InBuf2InPtr:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:492    .bss.InBuf5InPtr:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:502    .bss.RcvFlag.10129:00000000 RcvFlag.10129
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:503    .bss.RcvFlag.10129:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:508    .bss.RcvFlag.10135:00000000 RcvFlag.10135
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:509    .bss.RcvFlag.10135:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:511    .data.InBuf1Size:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:518    .data.InBuf2Size:00000000 $d
C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s:525    .data.InBuf5Size:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
ARM GAS  C:\Users\ALEXSN~1\AppData\Local\Temp\ccdrcf3G.s 			page 17


msTicks
CounterNoGPS
HAL_UART_IRQHandler
HAL_UART_Receive_IT
huart1
huart2
huart5
